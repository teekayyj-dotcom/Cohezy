services:
  db:
    image: postgres:15
    container_name: cohezy_db
    environment:
      POSTGRES_USER: cohezy
      POSTGRES_PASSWORD: cohezy_password
      POSTGRES_DB: cohezy_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - cohezy_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "cohezy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    container_name: cohezy_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - cohezy_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cohezy_backend
    environment:
      PYTHONPATH: /app
      POSTGRES_USER: cohezy
      POSTGRES_PASSWORD: cohezy_password
      POSTGRES_DB: cohezy_db
      POSTGRES_HOST: db
      POSTGREST_HOST: db
      POSTGRES_PORT: "5432"
      JWT_SECRET: supersecretkey
      JWT_ALGORITHM: HS256
      JWT_EXPIRATION_MINUTES: "30"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_DB: "0"
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cohezy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cohezy-frontend
    ports:
      - "80:80"
    networks:
      - cohezy_network
    depends_on:
      - backend

networks:
  cohezy_network:
    driver: bridge

volumes:
  db_data:
  redis_data: